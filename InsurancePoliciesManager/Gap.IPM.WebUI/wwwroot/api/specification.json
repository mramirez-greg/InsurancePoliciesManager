{
  "x-generator": "NSwag v13.7.1.0 (NJsonSchema v10.1.26.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Gap IPM API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/Coverage": {
      "get": {
        "tags": [
          "Coverage"
        ],
        "operationId": "Coverage_Get",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoverageTypesListVm"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Coverage"
        ],
        "operationId": "Coverage_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCoverageTypeCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Coverage/{id}": {
      "put": {
        "tags": [
          "Coverage"
        ],
        "operationId": "Coverage_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCoverageTypeCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Coverage"
        ],
        "operationId": "Coverage_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/InsurancePolicy": {
      "get": {
        "tags": [
          "InsurancePolicy"
        ],
        "operationId": "InsurancePolicy_Get",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsurancePoliciesListVm"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "InsurancePolicy"
        ],
        "operationId": "InsurancePolicy_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInsurancePolicyCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/InsurancePolicy/{id}": {
      "put": {
        "tags": [
          "InsurancePolicy"
        ],
        "operationId": "InsurancePolicy_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInsurancePolicyCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InsurancePolicy"
        ],
        "operationId": "InsurancePolicy_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "WeatherForecast_Get",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CoverageTypesListVm": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "coverageTypes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CoverageTypeLookupDto"
            }
          }
        }
      },
      "CoverageTypeLookupDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateCoverageTypeCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "coverageTypeName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateCoverageTypeCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "coverageTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "coverageTypeName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "InsurancePoliciesListVm": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "insurancePolicies": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/InsurancePolicyLookupDto"
            }
          }
        }
      },
      "InsurancePolicyLookupDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "coverageTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "coverageTypeName": {
            "type": "string",
            "nullable": true
          },
          "coverage": {
            "type": "integer",
            "format": "int32"
          },
          "coverageStart": {
            "type": "string",
            "format": "date-time"
          },
          "coveragePeriod": {
            "type": "integer",
            "format": "int32"
          },
          "policyValue": {
            "type": "integer",
            "format": "int64"
          },
          "riksType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateInsurancePolicyCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "coverageTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "coverage": {
            "type": "integer",
            "format": "int32"
          },
          "coverageStart": {
            "type": "string",
            "format": "date-time"
          },
          "coveragePeriod": {
            "type": "integer",
            "format": "int32"
          },
          "policyValue": {
            "type": "integer",
            "format": "int64"
          },
          "riksType": {
            "$ref": "#/components/schemas/RiskType"
          }
        }
      },
      "RiskType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Low",
          "Medium",
          "MediumHigh",
          "High"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "UpdateInsurancePolicyCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "insurancePolicyId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "coverageTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "coverage": {
            "type": "integer",
            "format": "int32"
          },
          "coverageStart": {
            "type": "string",
            "format": "date-time"
          },
          "coveragePeriod": {
            "type": "integer",
            "format": "int32"
          },
          "policyValue": {
            "type": "integer",
            "format": "int64"
          },
          "riksType": {
            "$ref": "#/components/schemas/RiskType"
          }
        }
      },
      "WeatherForecast": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32"
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}